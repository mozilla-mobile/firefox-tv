<?xml version="1.0" encoding="utf-8"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
<!-- Ignore MergeRootFrame: we need a single container View where we can attach fragments, so
     we definitely need to keep this FrameLayout (i.e. we can't <merge> here). -->
<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/drawer_layout"
    tools:ignore="MergeRootFrame"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:openDrawer="start">

    <!-- baselineAligned=false for better perf - it's not needed for nested layouts (Intellij warning). -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="horizontal"
        android:baselineAligned="false">

        <!-- A hidden focus view: when the drawer closes, we clear focus so the drawer can't be interacted
             with. When focus is cleared, the topmost view in the hierarchy regains focus. To avoid refocusing
             the drawer, we add this dummy View to gain focus instead. -->
        <View
                android:layout_width="0dp"
                android:layout_height="0dp"
                android:focusable="true"
                android:nextFocusLeft="@+id/hint_navigation_bar"
                android:nextFocusDown="@+id/container"
                android:nextFocusUp="@id/container"
                android:nextFocusRight="@id/container">
                <requestFocus/> <!-- Requests initial focus -->
        </View>

        <!-- A view that hints to the user that they can click left to get to the navigation bar. -->
        <include layout="@layout/hint_navigation_bar"/>

        <LinearLayout
            android:orientation="vertical"
            android:id="@id/container"
            android:layout_width="0dp"
            android:layout_height="match_parent"
            android:layout_weight="1"
            android:focusable="true"
            android:descendantFocusability="afterDescendants">
        </LinearLayout>

    </LinearLayout>

    <android.support.design.widget.NavigationView
        android:id="@+id/navigation"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:focusable="true"
        android:nextFocusRight="@id/container"
        android:descendantFocusability="afterDescendants">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <LinearLayout
                android:id="@+id/custom_button_layout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:visibility="invisible">

                <include layout="@layout/custom_drawer_item" />
            </LinearLayout>

            <!-- Double navigation view is a workaround so that we could add the custom layout above -->
            <android.support.design.widget.NavigationView
                android:id="@+id/fragment_navigation"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_gravity="start"
                app:menu="@menu/menu_home_drawer" />

        </LinearLayout>
    </android.support.design.widget.NavigationView>
</android.support.v4.widget.DrawerLayout>