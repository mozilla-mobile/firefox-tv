<?xml version="1.0" encoding="utf-8"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/background_home">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="@string/menu_settings"
        android:textSize="45sp"
        android:layout_marginStart="30dp"/>

    <LinearLayout
        android:id="@+id/new_settings_list"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:layout_gravity="center">

        <LinearLayout
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical"
            android:id="@+id/telemetryView"
            android:nextFocusUp="@+id/aboutButton"
            android:nextFocusRight="@id/aboutButton"
            android:nextFocusDown="@+id/deleteButton"
            android:background="@drawable/settings_item_selector"
            android:focusable="true"
            android:layout_gravity="center_vertical">

            <requestFocus/> <!-- Otherwise focus gets stuck on outer id/container. -->

            <!-- a11y: FRAGILE! When the parent layout is focused, we want to speak, "Checkbox (un)checked", based
                 on the state of the checkbox child. However, unlike for TextViews, VoiceView does not read the
                 checked state of child CheckBoxes so we have to work around this:

                 When VoiceWiev is enabled, we sacrifice consistency in visual highlighting in order to get the
                 correct content description by dynamically changing focusability so that the parent layout is
                 unfocusable and we focus the CheckBox instead, which announces the correct data. Since the
                 TextView is no longer spoken, we dynamically set the contentDescription of the CheckBox to the
                 text of the TextView to cause them to have the same announcement.

                 Unfortunately, implementing a more correct solution was taking too long: I came up with a
                 solution where the parent layout sets itself checkable in the AccessibilityDelegate and the
                 "checked" announcement was made, but this did not work in VoiceView, just in TalkBack. There
                 were no other obvious solutions so I opted to do this faster hack. -->
            <TextView
                android:id="@+id/telemetryDescriptionView"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/preference_mozilla_telemetry2"
                android:layout_gravity="center"
                android:layout_marginBottom="15dp"
                android:textSize="25sp"/>
            <CheckBox
                android:id="@+id/telemetryButton"
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:scaleType="fitCenter"
                android:background="@drawable/telemetry_check_selector"
                android:button="@null"
                android:layout_gravity="center"/>
        </LinearLayout>

        <LinearLayout
            android:id="@id/aboutButton"
            android:nextFocusUp="@+id/privacyNoticeButton"
            android:nextFocusRight="@id/privacyNoticeButton"
            android:nextFocusLeft="@id/telemetryView"
            android:nextFocusDown="@id/telemetryView"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical"
            android:background="@drawable/settings_item_selector"
            android:focusable="true"
            android:clickable="true"
            android:layout_gravity="center_vertical">
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/menu_about"
                android:layout_gravity="center"
                android:textSize="25sp"
                android:layout_marginBottom="15dp" />
            <ImageView
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:src="@drawable/ic_about"
                android:scaleType="fitCenter"
                android:layout_gravity="center"/>
        </LinearLayout>

        <LinearLayout
            android:id="@id/privacyNoticeButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center_vertical"
            android:layout_weight="1"
            android:background="@drawable/settings_item_selector"
            android:clickable="true"
            android:focusable="true"
            android:nextFocusDown="@id/aboutButton"
            android:nextFocusLeft="@id/aboutButton"
            android:nextFocusRight="@id/deleteButton"
            android:nextFocusUp="@id/deleteButton"
            android:orientation="vertical">
            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@string/preference_privacy_notice"
                    android:layout_gravity="center"
                    android:textSize="25sp"
                    android:layout_marginBottom="15dp" />
            <!-- We set the image resource dynamically because on lower API versions
            it turns out distorted when set in the XML -->
            <ImageView
                android:id="@+id/ic_lock"
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:layout_gravity="center"
                android:scaleType="fitCenter" />
        </LinearLayout>

        <LinearLayout
            android:id="@+id/deleteButton"
            android:nextFocusUp="@id/telemetryView"
            android:nextFocusRight="@id/telemetryView"
            android:nextFocusLeft="@id/privacyNoticeButton"
            android:nextFocusDown="@id/privacyNoticeButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical"
            android:background="@drawable/settings_item_selector"
            android:focusable="true"
            android:clickable="true"
            android:layout_gravity="center_vertical">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginBottom="15dp"
                android:gravity="center"
                android:text="@string/settings_cookies_dialog_title"
                android:textSize="25sp" />

            <ImageView
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:layout_gravity="center"
                android:scaleType="fitCenter"
                android:src="@drawable/ic_delete" />
        </LinearLayout>

    </LinearLayout>
    <org.mozilla.focus.web.IWebView
        android:id="@+id/settingsWebView"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:scrollbarThumbVertical="@drawable/scrollbar_thumb"
        android:visibility="gone">
    </org.mozilla.focus.web.IWebView>
</LinearLayout>
