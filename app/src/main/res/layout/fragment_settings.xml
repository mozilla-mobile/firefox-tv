<?xml version="1.0" encoding="utf-8"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/background_home">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="@string/menu_settings"
        android:textSize="45sp"
        android:layout_marginStart="30dp"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:layout_gravity="center">

        <!-- a11y: we want to select the whole container when VoiceView is disabled. When VoiceView
             is enabled, we want to announce, "TextView text, checkbox: (not) checked". However,
             focusing the container will not announce the CheckBox state [1]. Therefore, we do the
             following to focus the container without a11y and the CheckBox with a11y:
             - Set the CheckBox important for a11y - in theroy, this makes it focusable with VoiceView
             - Dynamically enable/disable focusable and change focus for the container when
             VoiceView is enabled/disabled - the parent being focusable will prevent the children
             from getting focused so, in practice, this makes the CheckBox focusable with VoiceView.
             - Set the contentDescription of the CheckBox to the text of the TextView

             Note: with VoiceView enabled, we sacrifice visual consistency (of which element is
             highlighted) for functionality. I tried solutions that would avoid this using
             AccessibiltyDelegate to override the parent announcements but they did not work with
             VoiceView even though they worked with TalkBack. To save time, I implemented this instead.

             [1]: Probably because in Android's view, the CheckBox can only change if it's directly
             focused but we override that. -->
        <LinearLayout
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical"
            android:id="@+id/telemetryButtonContainer"
            android:background="@drawable/settings_item_selector"
            android:focusable="true"
            android:layout_gravity="center_vertical">
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/preference_mozilla_telemetry2"
                android:layout_gravity="center"
                android:layout_marginBottom="15dp"
                android:textSize="25sp"/>
            <CheckBox
                android:id="@+id/telemetryButton"
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:scaleType="fitCenter"
                android:background="@drawable/telemetry_check_selector"
                android:button="@null"
                android:importantForAccessibility="yes"
                android:contentDescription="@string/preference_mozilla_telemetry2"
                android:layout_gravity="center"/>
            <requestFocus/> <!-- Focuses CheckBox when a11y enabled, parent when not enabled. -->
        </LinearLayout>

        <LinearLayout
            android:id="@+id/aboutButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical"
            android:background="@drawable/settings_item_selector"
            android:focusable="true"
            android:clickable="true"
            android:layout_gravity="center_vertical">
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/menu_about"
                android:layout_gravity="center"
                android:textSize="25sp"
                android:layout_marginBottom="15dp" />
            <ImageView
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:src="@drawable/ic_about"
                android:scaleType="fitCenter"
                android:layout_gravity="center"/>
        </LinearLayout>

        <LinearLayout
            android:id="@+id/privacyNoticeButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_gravity="center_vertical"
            android:layout_weight="1"
            android:background="@drawable/settings_item_selector"
            android:clickable="true"
            android:focusable="true"
            android:orientation="vertical">
            <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@string/preference_privacy_notice"
                    android:layout_gravity="center"
                    android:textSize="25sp"
                    android:layout_marginBottom="15dp" />
            <!-- We set the image resource dynamically because on lower API versions
            it turns out distorted when set in the XML -->
            <ImageView
                android:id="@+id/ic_lock"
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:layout_gravity="center"
                android:scaleType="fitCenter" />
        </LinearLayout>

        <LinearLayout
            android:id="@+id/deleteButton"
            android:nextFocusRight="@id/telemetryButtonContainer"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:orientation="vertical"
            android:background="@drawable/settings_item_selector"
            android:focusable="true"
            android:clickable="true"
            android:layout_gravity="center_vertical">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:layout_marginBottom="15dp"
                android:gravity="center"
                android:text="@string/settings_cookies_dialog_title"
                android:textSize="25sp" />

            <ImageView
                android:layout_width="128dp"
                android:layout_height="128dp"
                android:layout_gravity="center"
                android:scaleType="fitCenter"
                android:src="@drawable/ic_delete" />
        </LinearLayout>

    </LinearLayout>
</LinearLayout>
