version: 1
policy:
  pullRequests: collaborators
tasks:
  $let:
    decision_task_id: {$eval: as_slugid("decision_task")}
    repository:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.repo.html_url}
      else: ${event.repository.html_url}
    head_rev:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.sha}
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.after}
        else: ${event.release.tag_name}
    trust_level:
      $if: 'tasks_for in ["github-push", "github-release"] && event.repository.html_url == "https://github.com/mozilla-mobile/firefox-tv"'
      # Trust Level number corresponds to the "trust level" constants from the main Firefox repository.
      # 3 represents trusted work (it's been reviewed and landed, or it's work by a trusted dev in-repo) while
      # 1 represents anonymous/untrusted work (PRs)
      then: 3
      else: 1
    repository_full_name:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.base.repo.full_name}
      else: ${event.repository.full_name}
  in:
    $let:
      assume_scope_prefix: assume:repo:github.com/${repository_full_name}
      default_task_definition:
        taskId: ${decision_task_id}
        taskGroupId: ${decision_task_id}  # Must be explicit because of Chain of Trust
        schedulerId: taskcluster-github
        created: {$fromNow: ''}
        deadline: {$fromNow: '2 hours'}
        expires: {$fromNow: '1 year'}
        provisionerId: aws-provisioner-v1
        workerType: mobile-${trust_level}-decision
        requires: all-completed
        retries: 5
        priority: lowest
        routes:
          - statuses
        payload:
          maxRunTime: 6000
          image: mozillamobile/firefox-tv:2.3
          command:
            - /bin/bash
            - --login
            - -cx
            # The rest of the command must be defined below
          env:
            TASK_ID: ${decision_task_id}
            MOBILE_HEAD_REPOSITORY: ${repository}
            MOBILE_HEAD_REV: ${head_rev}
          features:
            chainOfTrust: true
            taskclusterProxy: true
          artifacts:
            public/task-graph.json:
              type: file
              path: /opt/firefox-tv/task-graph.json
              expires: {$fromNow: '1 year'}
            public/actions.json:
              type: file
              path: /opt/firefox-tv/actions.json
              expires: {$fromNow: '1 year'}
            public/parameters.yml:
              type: file
              path: /opt/firefox-tv/parameters.yml
              expires: {$fromNow: '1 year'}
        extra:
          tasks_for: ${tasks_for} # for chain of trust to re-build the task
        metadata:
          name: 'Decision task'
          description: ''
          source: ${repository}/raw/${head_rev}/.taskcluster.yml
    in:
      - $if: 'tasks_for == "github-pull-request" && event["action"] in ["opened", "reopened", "edited", "synchronize"]'
        then:
          $mergeDeep:
            - {$eval: 'default_task_definition'}
            - scopes:
                - ${assume_scope_prefix}:pull-request
              payload:
                command:
                  - >-
                    git fetch ${repository} ${event.pull_request.head.ref}
                    && git config advice.detachedHead false
                    && git checkout FETCH_HEAD
                    && python tools/taskcluster/decision_task.py pull-request ${event.sender.login}@users.noreply.github.com ${event.pull_request.head.ref}
              metadata:
                owner: ${event.sender.login}@users.noreply.github.com
      - $if: 'tasks_for == "github-push" && event["ref"] == "refs/heads/master"'
        then:
          $mergeDeep:
            - {$eval: 'default_task_definition'}
            - scopes:
                - ${assume_scope_prefix}:branch:master
              payload:
                command:
                  - >-
                    git fetch ${repository} refs/heads/master
                    && git config advice.detachedHead false
                    && git checkout FETCH_HEAD
                    && python tools/taskcluster/decision_task.py master ${event.sender.login}@users.noreply.github.com
              metadata:
                owner: ${event.sender.login}@users.noreply.github.com
      - $if: 'tasks_for == "github-release" && event["action"] == "published"'
        then:
          $mergeDeep:
            - {$eval: 'default_task_definition'}
            - scopes:
                - ${assume_scope_prefix}:release
              payload:
                command:
                  - >-
                    git fetch ${repository} refs/tags/${event.release.tag_name}
                    && git config advice.detachedHead false
                    && git checkout FETCH_HEAD
                    && python tools/taskcluster/decision_task.py release ${event.release.tag_name}
              metadata:
                owner: firefox-tv@mozilla.com
